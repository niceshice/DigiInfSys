Das fallbasierte Schließen (engl. case-based reasoning, kurz CBR, franz. raisonnement par cas, span. Razonamiento basado en casos) ist ein maschinelles Lernverfahren zur Problemlösung durch Analogieschluss. Das zentrale Element in einem CBR-System ist eine so genannte Fallbasis (Falldatenbank, case memory), in der bereits gelöste Probleme als Fall gespeichert sind. Ein solcher Fall besteht mindestens aus einer Problembeschreibung und einer zugehörigen Problemlösung. Das Ziel ist, zur Lösung eines gegebenen Problems die Lösung eines ähnlichen und früher bereits gelösten Problems heranzuziehen. Damit ahmt man eine menschliche Verhaltensweise nach: Vor ein neues Problem gestellt, erinnert sich der Mensch oft an eine vergleichbare Situation, die er in der Vergangenheit erlebt hat, und versucht, die aktuelle Aufgabe ähnlich zu meistern.
Gelegentlich spricht man auch von erinnerungsbasiertem Schließen.
Einige der frühesten Realisierungen war von Roger Schank und seinen Schülern Anfang der 1980er Jahre (sein Dynamic Memory Modell), so von Janet Kolodner in CYRUS und Michael Lebowitz in IPP. Ein weiterer Pionier war David Waltz in den 1980ern (Memory Based Reasoning) auf den massiv parallelen Rechnern der Thinking Machine Corporation von Danny Hillis. 1995 gab es eine erste internationale Konferenz über CBR.Das wohl bekannteste Modell geht auf die Wissenschaftler Agnar Aamodt und Enric Plaza zurück, die das Grundprinzip des Case-Based Reasoning als einen Prozess mit vier Phasen, den so genannten CBR-Zyklus, beschrieben haben (Quelle: siehe unten).

Retrieve. Ausgehend von einer gegebenen Problembeschreibung gilt es, in der Fallbasis ein möglichst ähnliches Problem zu ermitteln. Die Herausforderung in dieser Phase besteht darin, die Ähnlichkeit der Problembeschreibungen zu bestimmen.
Reuse. Die Lösung des Falls, der dem vorgegebenen am ähnlichsten ist, wird als ein erster Lösungsvorschlag übernommen. Damit hat man einen Ausgangspunkt für die Lösung des neuen Problems.
Revise. Nicht immer kann man das aktuelle Problem genau so lösen wie das frühere. In der Revise-Phase überprüft man die zuvor gewonnene Ausgangslösung und passt sie gegebenenfalls an die konkreten Bedingungen an.
Retain. Der überarbeitete Fall wird schließlich in der Fallbasis abgespeichert und steht damit für zukünftige Anfragen zur Verfügung. Auf diese Weise lernt das System mit jedem weiteren gelösten Problem hinzu und verbessert so seine Leistungsfähigkeit.Case-Based Reasoning hat sich besonders in Anwendungssystemen für den Kundendienst, so genannten Help-Desk-Systemen, bewährt, wo man es z. B. zur Diagnose und Therapie von Kundenproblemen nutzt. In jüngerer Zeit setzt man es verstärkt in (Produkt-)Beratungssystemen ein, beispielsweise im E-Commerce, sowie zur Klassifikation von Texten.
Als vorteilhaft gilt, dass CBR auch bei schlecht strukturierten und unvollständig beschriebenen Problemen angewendet werden kann. Im Gegensatz zu benachbarten Konzepten (siehe unten) genügt anfänglich schon eine vergleichsweise kleine Sammlung von Referenzfällen, die durch die Arbeit mit dem CBR-System nach und nach anwächst. Auch in Anwendungsdomänen, deren genaue Wirkungszusammenhänge nicht vollständig bekannt sind, eignet sich CBR.
Wie immer, wenn man mit Analogien argumentiert, ist darauf zu achten, dass die vom System generierten Lösungsvorschläge für das vorliegende Problem adäquat sind, ob also beispielsweise die Voraussetzungen, auf denen die historische Lösung basierte, immer noch erfüllt sind usw. (Veralterung des Wissens).Das Case-Based Reasoning ist ein Teilgebiet der Künstlichen Intelligenz und kann hierin zu den maschinellen Lernverfahren gerechnet werden. Der Lernprozess basiert auf Analogie, im Unterschied zum Lernen durch Induktion und Deduktion. Aufgrund zahlreicher Anwendungsmöglichkeiten in Unternehmen (siehe oben) beschäftigt man sich nicht nur in der (Kern-)Informatik, sondern auch in der Wirtschaftsinformatik mit CBR.