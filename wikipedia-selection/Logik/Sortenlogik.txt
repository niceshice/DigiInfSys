Sortenlogik entspringt der Intention, das (mengentheoretische) Universum (Grundmenge, Allklasse, bis hin zu einem Grothendieck-Universum) nicht als eine homogene Ansammlung von (mathematischen) Objekten zu betrachten, sondern diese auf verschiedene Klassen oder Typen aufzuteilen, die in diesem Zusammenhang Sorten genannt werden (ähnlich wie die Datentypen in vielen Programmiersprachen und Datenbanksystemen). Jedem Term einer logischen Formel wird eine Sorte zugeordnet. Unifikation von Termen ist nur dann zugelassen, wenn beide Terme von der gleichen Sorte sind; Substitution und Argumentübergabe können ebenfalls nur unter Berücksichtigung dieser Sorten erfolgen. Falsche Sortenzuordnungen werden also bereits als Syntaxfehler ausgewiesen.Aus dem Blickwinkel der Prädikatenlogik (ohne Sorten) sind Sorten einstellige Relationen (Sortenprädikate), falsche Sortenzuweisungen erscheinen dann aber nicht mehr als Syntaxfehler, sondern nach Zuweisung einer Semantik als falsch. Die Sortenlogik stellt dagegen für diese Prädikate eine Spezialbehandlung der eben erwähnten Form zur Verfügung. Im Gegensatz zur Prädikatenlogik zweiter Stufe mit Relationsvariablen bietet die Sortenlogik daher keine Steigerung der Mächtigkeit, etwa in Bezug auf Fragen nach Beweisbarkeit. Da viele Deduktionschritte aber wegen der Sortenunverträglichkeit nicht in Betracht gezogen werden brauchen, verringert sich der Suchaufwand nach einem Beweis in der Praxis beträchtlich. Mehrsortige Strukturen bilden ein mengentheoretisches Modell für die Datentypen in der Informationstechnologie, insbesondere bei Datenbanken, weshalb ihnen eine erhebliche praktische Bedeutung zukommt. Darüber hinaus ist Mehrsortigkeit eine Möglichkeit, den mit Typentheorien verbundenen Belangen auf mengentheoretischer Basis Rechnung zu tragen.Es gibt prinzipiell verschiedene Möglichkeiten, diese Absicht zu realisieren. Den meisten Fällen gemeinsam ist es gibt eine Menge T {\displaystyle T} von Sorten (in der Informationstechnologie auch Datentypen genannt) es gibt eine Verallgemeinerung des Begriffs Signatur, um die mit den Sorten verbundene Zusatzinformation zu berücksichtigen.Im gesamten Universum als Zusammenfassung aller Objekte einer Struktur werden dann in die Wertebereiche zu den verschiedenen Sorten abgegrenzt. Die Algebraisierung der Sortenlogik wird in einem Artikel von Caleiro und Gonçalves beschrieben und kann gut als eine Einführung in die Materie dienen.In der vielsortigen Logik wird die paarweise Disjunktheit der Wertebereiche (auch Trägermengen genannt) zu den verschiedenen Sorten vorausgesetzt. Bei vielsortigen Signaturen kommen im Vergleich zu gewöhnlichen einsortigen Signaturen zu den Funktions- und Relations- und ggf. eigens ausgewiesenen Konstantensymbolen noch Bezeichnungen für die Sorten, d. h. die Wertebereiche hinzu. Jedes der Symbole wird jetzt nicht mehr nur durch die Stelligkeit gekennzeichnet, sondern durch die genaue Abfolge der Argumentsorten, und ggf. eine Wert- oder Bildsorte. Eine n-stellige Relatione ist eine Teilmenge des n-fachen kartesischen Produktes einer Sequenz der Trägermengen. Der Argumentbereich einer n-stelligen Funktion ist ein ebensolches Produkt, dazu kommt noch eine der Trägermengen für das Bild (Funktionswert).Ein Beispiel bieten Taxa (Gruppen) biologischer Organismen, unter anderem Pflanze {\displaystyle {\textit {Pflanze}}} und Tier {\displaystyle {\textit {Tier}}} . Während eine Funktion Mutter : Tier ⟶ Tier {\displaystyle {\textit {Mutter}}:{\textit {Tier}}\longrightarrow {\textit {Tier}}} sinnvoll ist, würde das für eine ähnliche Funktion Mutter : Pflanze ⟶ Pflanze {\displaystyle {\textit {Mutter}}:{\textit {Pflanze}}\longrightarrow {\textit {Pflanze}}} im Allgemeinen nicht gelten. Sortenlogik erlaubt Terme der Art Mutter ( {\displaystyle {\textit {Mutter}}(} Rex {\displaystyle {\textit {Rex}}} ) {\displaystyle )} , verwirft aber Mutter ( {\displaystyle {\textit {Mutter}}(} Schaeferbuche {\displaystyle {\textit {Schaeferbuche}}} ) {\displaystyle )} als syntaktische Fehlkonstruktion.Vielsortige Strukturen erster Stufe sind beispielsweise folgende heterogene Algebren: Vektorräume über einem Körper (Links-, Rechtsvektorräume bei einem Schiefkörper, Bivektorräume) – mit den Sorten Skalar und Vektor Moduln über einem kommutativen Ring (Links-, Rechtsmoduln bei beliebigem Ring, Bimoduln) – eine Verallgemeinerung des Begriffs (d. h. der Kategorie) Vektorraum Algebren über einem Körper oder kommutativen Ring – als spezielle Vektorräume Lie-Algebren und kommutative Algebren über einem Körper – beides spezielle Algebren über diesem Körper Affine Räume sind Beispiele für dreisortige Strukturen mit einem Punktraum A {\displaystyle A} und einem Vektorraum mit Trägermenge V {\displaystyle V} über einem Körper K {\displaystyle K} , die Punkte sind mit den Vektoren über eine Parallelverschiebung genannte Operation verknüpft.Es seien F 0 {\displaystyle {\mathcal {F}}_{0}} und R 0 {\displaystyle {\mathcal {R}}_{0}} disjunkte Mengen von nichtlogischen Zeichen. Sei zudem T {\displaystyle T} eine weitere davon disjunkte endliche und nichtleere Menge nichtlogischer Zeichen. Man nennt dann jedes Zeichen in S := F 0 ∪ R 0 {\displaystyle {\mathcal {S}}:={\mathcal {F}}_{0}\cup {\mathcal {R}}_{0}} ein Symbol und S {\displaystyle {\mathcal {S}}} eine Symbolmenge, jedes Zeichen in T {\displaystyle T} eine Sorte,wenn durch eine Abbildung τ {\displaystyle \tau } jedem Symbol als Typ eine Sequenz (Tupel) von Sorten zugeordnet wird, und zwar: τ ( f ) ∈ T k + 1 {\displaystyle \tau (f)\in T^{k+1}} für alle f ∈ F 0 {\displaystyle f\in {\mathcal {F}}_{0}} mit Stelligkeit k = σ ( f ) ∈ N 0 {\displaystyle k=\sigma (f)\in \mathbb {N} _{0}} , und τ ( R ) ∈ T k {\displaystyle \tau (R)\in T^{k}} für alle R ∈ R 0 {\displaystyle R\in {\mathcal {R}}_{0}} , mit Stelligkeit k = σ ( R ) ∈ N 0 {\displaystyle k=\sigma (R)\in \mathbb {N} _{0}} . S := ( T , S , τ ) {\displaystyle {\boldsymbol {S}}:=(T,{\mathcal {S}},\tau )} heißt dann eine mehr- oder vielsortige Signatur.Wie im einsortigen Fall wird jedes f ∈ F 0 {\displaystyle f\in {\mathcal {F}}_{0}} als Funktionssymbol, jedes R ∈ R 0 {\displaystyle R\in {\mathcal {R}}_{0}} als Relationssymbol (oder Prädikatsymbol) bezeichnet. Durch die vielsortige Signatur S {\displaystyle {\boldsymbol {S}}} wird zugeordnet den Relationssymbolen R {\displaystyle R} der Stelligkeit k = σ ( R ) {\displaystyle k=\sigma (R)} ein Typ (Argumenttyp) τ ( R ) = s = ( s 1 , … s k ) ∈ T k {\displaystyle \tau (R)={\boldsymbol {s}}=({\boldsymbol {s}}_{1},\dots {\boldsymbol {s}}_{k})\in T^{k}} bestehend aus den k {\displaystyle k} Argumentsorten s 1 , … s k {\displaystyle {\boldsymbol {s}}_{1},\dots {\boldsymbol {s}}_{k}} und den Funktionssymbolen f {\displaystyle f} der Stelligkeit k = σ ( f ) {\displaystyle k=\sigma (f)} ein Typ τ ( f ) = ( s ; s ′ ) = ( s 1 , … s k ; s ′ ) ∈ T k + 1 {\displaystyle \tau (f)=({\boldsymbol {s}};s')=({\boldsymbol {s}}_{1},\dots {\boldsymbol {s}}_{k};s')\in T^{k+1}} bestehend aus dem Argtumennttyp s {\displaystyle {\boldsymbol {s}}} (d. h. den k {\displaystyle k} Argumentsorten wie bei den Relationen) und zusätzlich der Bildsorte s ′ = τ ( f ) n + 1 {\displaystyle s'=\tau (f)_{n+1}} .Die Sequenzen (Tupel) der Symboltypen (der Bildwerte von τ {\displaystyle \tau } ) lassen sich interpretieren als Wörter (Zeichenketten) über dem Sortenalphabet T {\displaystyle T} . Mengentheoretisch handelt es sich um Elemente der Kleeneschen Hülle T ∗ {\displaystyle T^{*}} . Die nullstelligen Funktionssymbole c ∈ C := { f ∈ F 0 | τ ( f ) ∈ T } {\displaystyle c\in {\mathcal {C}}:=\{f\in {\mathcal {F}}_{0}|\tau (f)\in T\}} werden als Konstantensymbole der Sorte τ ( f ) {\displaystyle \tau (f)} interpretiert. Ggf. vorhandene nullstellige Relationssymbole b ∈ B := { R ∈ T 0 | τ ( R ) = ϵ } {\displaystyle b\in {\mathcal {B}}:=\{R\in {\mathcal {T}}_{0}|\tau (R)=\epsilon \}} werden analog als – aussagenlogische (oder boolesche) Konstantensymbole interpretiert. Ähnlich wie im einsortigen Fall mit der Stelligkeit kann man hier statt der Abbildung τ {\displaystyle \tau } , die jedem Symbol seinen Typ aus T ∗ {\displaystyle T^{*}} zuordnet, deren Urbildfasern betrachten. Konkret sind dies die Familien R = ( R s ) s ∈ T ∗ {\displaystyle {\boldsymbol {\mathcal {R}}}=({\boldsymbol {\mathcal {R}}}_{s})_{s\in {T^{*}}}} und F = ( F s , s ′ ) s ∈ T ∗ , s ′ ∈ T {\displaystyle {\boldsymbol {\mathcal {F}}}=({\boldsymbol {\mathcal {F}}}_{s,s'})_{s\in {T^{*}},s'\in {T}}} ; in Funktionschreibweise: R : T ∗ → R 0 {\displaystyle {\boldsymbol {\mathcal {R}}}:T^{*}\to {\mathcal {R}}_{0}} ordnet jeder Sequenz von Sorten die Menge der Relationssymbole mit dieser Sequenz als Typ zu (die Länge der Sequenz ist dabei die Stelligkeit); und F : T + → F 0 {\displaystyle {\boldsymbol {\mathcal {F}}}:T^{+}\to {\mathcal {F}}_{0}} weist jeder nichtleeren Sequenz von Sorten die Menge der Funktionssymbole zu, wobei die jeweils letzte Sorte der Sequenz die Bildsorte bezeichnet und die anderen vorher den Argumenttyp.Für die Kennzeichnung der Signatur genügt dann die Angabe des Sortenalphabets zusammen mit diesen beiden Familien S = ( T , R , F ) {\displaystyle {\boldsymbol {\mathcal {S}}}=(T,{\boldsymbol {\mathcal {R}}},{\boldsymbol {\mathcal {F}}})} . Statt τ ( f ) = ( s 1 , … s k ; s ′ ) ∈ T k + 1 {\displaystyle \tau (f)=({\boldsymbol {s}}_{1},\dots {\boldsymbol {s}}_{k};s')\in T^{k+1}} zur Kennzeichnung des Typs der Funktionssymbole wird auch f : s 1 , … s k ⟶ s ′ {\displaystyle f:{\boldsymbol {s}}_{1},\dots {\boldsymbol {s}}_{k}\longrightarrow s'} geschrieben. Bei Verwendung der Schreibweise ist stets zu bedenken, dass hier Bezeichnungen, Symbole, Sorten(bezeichner) gemeint sind, nicht die Objekte, Funktionen, Wertebereiche (Trägermengen) selbst. Die Schreibweise ist insbesondere bei Überladung gültig (die Bildsorte ist durch den Argumenttyp eindeutig bestimmt). Das gleiche Relationssymbol kann für Relationen unterschiedlichen Argumenttyps verwendet werden. Das gleiche gilt für Funktionssymbole. Man spricht dann von einem überladenen Relationssymbol (Prädikat) bzw. Funktionssymbol. Betrachtet man dei Urbildfasern, dann sind die Menge der Relationssymbole und die Menge der Funktionssymbole zu jeder festen Bildsorte s ′ {\displaystyle s'} bei Überladung nicht mehr notwendig paarweise disjunkt. Für einen festen Argumenttyp s ∈ T ∗ {\displaystyle {\boldsymbol {s}}\in T^{*}} sind jedoch weiterhin die Mengen der Funktionssymbole zu verschiedenen Bildsorten s 1 ′ , s 2 ′ ∈ T {\displaystyle s'_{1},s'_{2}\in T} disjunkt: F s , s 1 ′ ∩ F s , s 2 ′ = ∅ {\displaystyle {\boldsymbol {\mathcal {F}}}_{{\boldsymbol {s}},s'_{1}}\cap {\boldsymbol {\mathcal {F}}}_{{\boldsymbol {s}},s'_{2}}=\emptyset } . Folglich bleiben auch in diesem Fall die Menge aller Relationssymbole R 0 {\displaystyle {\mathcal {R}}_{0}} und die Gesamtheit aller Funktionssymbole F ∗ , s := ⋃ s ∈ T ∗ F s , s ′ = ⋃ { F s , s ′ | s ∈ T ∗ } {\displaystyle {\boldsymbol {\mathcal {F}}}_{*,s}:=\bigcup _{{\boldsymbol {s}}\in {T}^{*}}{\boldsymbol {\mathcal {F}}}_{{\boldsymbol {s}},s'}=\bigcup \{{\boldsymbol {\mathcal {F}}}_{{\boldsymbol {s}},s'}|{\boldsymbol {s}}\in {T}^{*}\}} für jede Bildsorte s ′ ∈ T {\displaystyle s'\in T} paarweise disjunkt.Die Typzuordnung τ {\displaystyle \tau } ist bei Überladung eine Multifunktion ( τ : S ⊸ T ∗ {\displaystyle \tau :{\mathcal {S}}\multimap T^{*}} statt τ : S → T ∗ {\displaystyle \tau :{\mathcal {S}}\to T^{*}} ). Aber auch in diesem Fall hat jedes Symbol bei festgelegtem Argumenttyp höchstens eine Bedeutung: Entweder ist es ein Relationssymbol, oder ein Funktionssymbol zu einer bestimmten Bildsorte s ′ {\displaystyle s'} .Bezeichnet F s , ∗ {\displaystyle {\boldsymbol {\mathcal {F}}}_{{\boldsymbol {s}},*}} die Menge aller Funktionssymbole mit einem bestimmten Argumenttyp s {\displaystyle {\boldsymbol {s}}} (also die Vereinigung über alle Bildsorten ⋃ { F s , s ′ | s ′ ∈ T } {\displaystyle \bigcup \{{\boldsymbol {\mathcal {F}}}_{{\boldsymbol {s}},s'}|s'\in T\}} ), dann sind die Einschränkungen von τ {\displaystyle \tau } auf einen bestimmten Argumenttyp ( τ t := τ | R s ∪ F s , ∗ {\displaystyle \tau _{t}:=\tau |_{{\boldsymbol {\mathcal {R}}}_{\boldsymbol {s}}\cup {\boldsymbol {\mathcal {F}}}_{{\boldsymbol {s}},*}}} ) als Abbildungen immer eindeutig. Auch im Fall von Überladung ist die Abbildung τ ′ {\displaystyle \tau '} , die jedem Funktionssymbol die Bildsorte (als letzte Koordinate der Multifunktion τ {\displaystyle \tau } , also τ ( f ) n + 1 {\displaystyle \tau (f)_{n+1}} mit Stelligkeit n = σ ( f ) {\displaystyle n=\sigma (f)} ) zuordnet, eindeutig.Eine Logik ohne Überladungen heißt strikt. Eine Programmiersprache kann beispielsweise Ganzzahlen (int für integer) und Zeichenketten (string, mit lexikographischer Ordnung) zur Verfügung stellen. Das Kleinerzeichen < kann zum Vergleich zweier Ganzzahlen oder zweier Zeichenketten verwendet werden: <∈ R int ⁡ int , <∈ R string ⁡ string {\displaystyle <\in {\boldsymbol {\mathcal {R}}}_{\operatorname {int} \operatorname {int} },<\in {\boldsymbol {\mathcal {R}}}_{\operatorname {string} \operatorname {string} }} . Als Beispiele für mehrsortig überladene Funktionssymbole können wieder max und min dienen, die auf verschiedenen Totalordnungen nebeneinander mit gleicher Bezeichnung vorkommen können. Die Funktionssymbole min und max können entweder auf n Argumente vom Datentyp int oder auf n Argumente vom Typ string angewendet werden. Die Bildsorte ist dann durch den Typ der Argumente festgelegt, nämlich gleich der Sorte eines jeden einzelnen Arguments, int oder string. Eine spezielle Bedeutung kommt – wenn vorhanden – der Sorte der logischen Wahrheitswerte { false , true } {\displaystyle \{\operatorname {false} ,\operatorname {true} \}} zu; übliche Bezeichnungen für diese sind logical {\displaystyle \operatorname {logical} } (oder boolean {\displaystyle \operatorname {boolean} } ). Relationen können entsprechend ihrer charakteristischen Funktion als Prädikate aufgefasst werden, siehe Relation, § Relationen und Funktionen. Entsprechend können Relationssymbole als boolesche Funktionssymbole mit Bildsorte logical {\displaystyle \operatorname 