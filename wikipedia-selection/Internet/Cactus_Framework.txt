Cactus ist ein Test-Framework, das von der Apache Software Foundation im Jakarta-Projekt entwickelt wird. Es baut auf dem JUnit-Test-Framework auf, wird jedoch für serverseitige Tests benutzt, z. B. zum Testen von Servlets, EJBs, Tag libs und JSPs.
Cactus setzt für die Servlet- bzw. EJB-Container keine Mock-Objekte ein, sondern lässt die Tests innerhalb des Containers laufen. Dazu verwendet es Codehaus Cargo um den jeweiligen Container zu instrumentieren und HttpClient um die HTTP-Verbindungen aufzubauen.Cactus sieht sich als Framework für integrative Unit-Tests – d. h. Unit-Tests, die die Interaktionen mit dem Container testen. Cactus ist aber auch für logische Unit-Tests (z. B. Applikationslogiktest) und funktionelle Unit-Tests (z. B. HTTP Request-/Response-Test) einsetzbar.Cactus wird seit dem 5. August 2011 nicht mehr weiterentwickelt.Cactus ermöglicht es Unit-Tests für Servlets, JSPs, Filters und EJBs zu schreiben. Es ermöglicht auch die Integration von HTTP-Unit und HTML-Unit und somit HTTP- und HTML-Response-Objekte zu testen.
Cactus erlaubt es am Client HTTP & Servlet Cookies, HTTP Parameter und Header, Authentifizierungs- und Form Parameter zu setzen und HTML-Text, Cookies, HTTP Header und Response Codes zu prüfen.Cactus Tests können von einem Browser aus gestartet werden. Ihr Ergebnis kann entweder in XML oder HTML dargestellt werden. Cactus Tests können aber auch mittels Apache Ant und Apache Maven in den Entwicklungsprozess eingebaut werden und somit im Rahmen des Unit-Tests am Server ausgeführt werden.Verwendung eines reinen Unit-Test-Frameworks wie JUnit gemeinsam mit einem Mocking Framework wie Easymock um die am Server laufende Applikationslogik zu testen.
Verwendung von HTTP-Unit oder HTML-Unit um funktionelle Unit-Tests oder Request-übergreifende Fachlichkeiten zu testen.
Verwendung von Testautomatisierungswerkzeugen um die Web-Applikation gesamtheitlich fachlich zu testen.