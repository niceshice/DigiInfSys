Apache Axis (Apache eXtensible Interaction System) ist eine SOAP-Engine zur Konstruktion von darauf basierenden Webservices und Clients. Es existieren Implementierungen in C++ und Java.
Apache Axis ist eine Neuentwicklung und Nachfolger von Apache SOAP, das auf dem IBM-Framework IBM SOAP basierte. Ziel dieser Neuentwicklung war, eine höhere Geschwindigkeit, Flexibilität, Komponentenorientierung, Abstraktion des Transportframeworks sowie die Unterstützung von WSDL zu erreichen.
Die höhere Geschwindigkeit erreicht AXIS durch Verwendung des SAX-Parsers, während Apache SOAP im Gegensatz dazu auf einem langsameren DOM-Parser aufbaute. Axis2 verwendet wie alle anderen aktuellen Webservice-Frameworks StAX, welches einen weiteren Geschwindigkeitsvorteil gegenüber SAX mit sich bringt.Axis wird häufig als Java-Servlet innerhalb eines Servlet-Containers (beispielsweise Apache Tomcat) betrieben, der Webservices für Java-Klassen anbietet. Mit den Tools JAVA2WSDL und WSDL2JAVA wird der Entwickler dabei unterstützt, automatisch eine robuste Schnittstelle in Java zu erzeugen, ohne sich direkt mit der Funktionsweise von SOAP befassen zu müssen.
Für einfache Anwendungen bietet Axis an, dass Java Applikationen direkt als JWS (Java-Webservices) bereitgestellt werden können. Daraus generiert Axis automatisch einen verwendbaren Webservice inklusive WSDL Beschreibung, die über das Netz ausgelesen werden kann, um hierfür einen entsprechenden Client zu entwickeln.Axis unterstützt die Standards SOAP 1.1, 1.2, MTOM (nur Axis2) und WSDL 1.1 der W3C. Es wird auch SAAJ 1.1 (SOAP with Attachments API for Java) von Sun Microsystems unterstützt.
Darüber hinaus unterstützt es die W3C-Spezifikationen WS-Reliable Messaging, WS-Security, WS-AtomicTransaction, WS-Addressing, WS-Policy und WS-MetadataExchange.Webservices können über WSDD-Dateien (XML-Dokumente) über das Admin-Servlet in Axis eingebunden werden. Häufig gibt es hierfür deshalb deploy.wsdd, undeploy.wsdd und/oder server-config.wsdd-Dateien.
Beispiel (Tomcat, JBoss) einer server-config.wsdd, die einen Webservice "Hello"
mit passender WSDL unter Apache-Axis installiert:Zur Entwicklung von AXIS-Webservices und Clients kann Eclipse mit dem Lomboz-Plugin verwendet werden. Netbeans enthält ab Version 6.1 ebenfalls die Möglichkeit, Axis2-Webservices und Clients zu generieren.Seit Februar 2005 steht mit Apache Axis2 die nächste Generation von Apache Axis zur Verfügung. Es handelt sich um eine vollständige Neuentwicklung, welche das klassische Axis bezüglich Geschwindigkeit, Flexibilität und Benutzerfreundlichkeit übertrifft. Es liegen Implementierungen in C und Java vor.Axis2 verwendet ein eigenes Objektmodell namens AXIOM (Axis Object Model). Es basiert auf der Streaming API for XML und ist damit wesentlich speichereffizienter als etwa DOM, da Kindelemente nur bei Bedarf verarbeitet werden.Durch data binding ist es möglich, XML-Inhalte in einer Programmiersprache als Objekte zu verwenden. Axis2 bietet hierfür das Axis2 Databinding Framework (ADB). Es werden aber auch andere Techniken wie XMLBeans, JAXB und JiBX unterstützt.Axis2 unterscheidet sich von Axis 1.x des Weiteren durch ein einfacheres Deployment. Der Mechanismus ähnelt dem archivbasierten Java-EE-Deployment. Die Klassendateien und Deskriptoren des Services werden in einem JAR-Archiv zusammengefasst und in einem bestimmten Ordner – dem repository – abgelegt. Das Service-Archiv muss dabei eine bestimmte Struktur aufweisen und die Endung .aar tragen.
Um eine hohe Verfügbarkeit zu erreichen, bringt Axis2 zwei wichtige Funktionen mit:

Hot deployment
Ein Webservice kann zur Laufzeit in das System integriert werden, ohne dass der Server neugestartet werden muss.
Hot update
Es können Änderungen am Webservice vorgenommen werden, ohne das System vorher anzuhalten. Diese Funktion erweist sich in einer Entwicklungsumgebung als besonders nützlich.