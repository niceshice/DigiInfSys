Apache ActiveMQ ist ein freier Message Broker, der vollständig das Java Message Service 1.1 (JMS) implementiert. Apache ActiveMQ verändert die Verbindungen eines Netzwerks zwischen bestehenden Anwendungen, indem die synchrone Kommunikation zwischen zu integrierenden Applikationen in eine asynchrone Kommunikation umgewandelt wird.
Apache ActiveMQ wird von Enterprise Service Bus Implementierungen wie Apache ServiceMix und Mule verwendet. Apache ActiveMQ selbst wiederum inkludiert Apache Camel 2.0 und KahaDb Persistent Storage.Abgesehen von JMS unterstützt er Protokolle wie AMQP 1.0, STOMP und OpenWire und neben Java auch die Programmiersprachen der .NET-Familie, sowie C, Ruby, Perl, Python oder PHP.
Er beinhaltet weitere Features wie z. B. Clustering und die Verwaltung von Nachrichten und Client-Implementierungen.
ActiveMQ kann direkt auf einer herkömmlichen Java Virtual Machine (JVM) ausgeführt werden, der Einsatz eines Applikationsservers ist nicht nötig.ActiveMQ wird entweder als JMS Provider (Anbieter) oder als Broker (Makler) bezeichnet und übernimmt damit die Rolle eines Servers. Alle anderen Anwendungen im JMS Netzwerk werden dagegen als JMS-Clients bezeichnet.
Ein Broker kennt zwei Arten von Destinationen (Reiseziel, Zielort) – Queue und Topic. Sobald der Broker die erste Nachricht für dieses Reiseziel empfangen hat, wird in beiden Fällen die Destination samt ihrer Art automatisch festgestellt.
Queues kennen zwei Arten von Clients – Erzeuger (Producer) und Verbraucher (Consumer). Hat ein Verbraucher eine Nachricht von einem Erzeuger empfangen, wird diese Nachricht aus der Queue gelöscht und steht den anderen Verbrauchern nicht mehr zur Verfügung.
Eine Nachricht kann also nur von einem einzelnen Verbraucher empfangen (konsumiert) werden.
Topics kennen ebenfalls zwei Arten von Clients – Publisher und Subscriber. In diesem Fall ist es jedoch möglich, dass mehrere Subscriber die gleiche Nachricht empfangen.